plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'esa.mydemo'
    compileSdk 33

    defaultConfig {
        applicationId "esa.mydemo"
        minSdk 28
        targetSdk 33
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        双向绑定
        dataBinding {
            enabled true
        }

        viewBinding {
            enabled true
        }

        //dex分包
        multiDexEnabled = true

    }

//    dexOptions {
//        preDexLibraries = false
//        javaMaxHeapSize "4g"     //增加java堆内存大小
//        additionalParameters = [//dex参数详见 dx --help
//                                '--multi-dex',//多分包
//                                '--set-max-idx-number=60000',//每个包内方法数上限
//                                '--main-dex-list='+projectDir+'/maindexlist.txt',//打包进主classes.dex的文件列表
//                                '--minimal-main-dex'//使上一句生效
//        ]
//    }


    //设置签名
    signingConfigs {
        releaseConfig {
            keyAlias 'key0'
            keyPassword '111111'
            storeFile file('K:\\android\\keystore.jks')//签名文件路径
            storePassword '111111'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
//        双向绑定
    buildFeatures {
        viewBinding true
    }


    def listSubFile = {
        def resFolder = 'src/main/res/layout'
        def files = file(resFolder).listFiles()
        def folders = []
        files.each { item -> folders.add(item.absolutePath)
        }
        folders.add(file(resFolder).parentFile.absolutePath)
        return folders
    }

    sourceSets {
        main {
            res.srcDirs 'src/main/res/layout/fab'
        }
    }
}

dependencies {

    implementation project(path: ':mylibrary')
    implementation project(path: ':myupdate')
    implementation project(path: ':myweather')

    implementation 'androidx.appcompat:appcompat:1.4.1'
//    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.preference:preference:1.1.+'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.annotation:annotation:1.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    def activity_version = "1.6.1"
    // Java language implementation
    implementation("androidx.activity:activity:$activity_version")
    // Kotlin
    implementation("androidx.activity:activity-ktx:$activity_version")

    //协调布局--用于behavior,多个view联动
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'


    //用于material 组件
    //implementation 'com.google.android.material:material:1.8.0-alpha02'
    implementation 'com.google.android.material:material:1.9.0'


    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'


    //kotlin核心模块
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.0"


//自己开发的 下拉刷新，上拉加载更多
    implementation 'com.github.tvrddmss:MyImplementation:2.2'

//流式布局
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

//图片缓存及gif显示
    implementation 'com.github.bumptech.glide:glide:4.15.1'

//引如Dagger2
    implementation('com.google.dagger:dagger:2.42')
    annotationProcessor('com.google.dagger:dagger-compiler:2.42')


//    implementation "com.android.support:multidex:1.0.1"

//chart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'


//table
    implementation 'com.github.huangyanbin:SmartTable:2.2.0'


//required, enough for most devices.
//    implementation 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'

//    # Other ABIs: optional
//    implementation 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8'

//    # ExoPlayer as IMediaPlayer: optional, experimental
//    implementation 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.8'

//    implementation 'cn.jzvd:jiaozivideoplayer:6.2.4'

//饺子视频
//    implementation 'cn.jzvd:jiaozivideoplayer:6.2.7'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-java:0.8.4'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.4'
//    implementation 'com.jwkj:M3U8Manger:v2.1.9'
//    implementation 'cn.jzvd:jiaozivideoplayer:7.7.0'

    var media3_version = "1.0.0-rc01"
    implementation("androidx.media3:media3-exoplayer:$media3_version")
// For building media playback UIs
    implementation("androidx.media3:media3-ui:$media3_version")
// For building media playback UIs for Android TV using the Jetpack Leanback library
    implementation("androidx.media3:media3-ui-leanback:$media3_version")

// For loading data using librtmp
    implementation("androidx.media3:media3-datasource-rtmp:$media3_version")
// For HLS playback support with ExoPlayer
    implementation("androidx.media3:media3-exoplayer-hls:$media3_version")


// CameraX core library
    def camerax_version = '1.1.0-beta01'
    implementation "androidx.camera:camera-core:$camerax_version"

// CameraX Camera2 extensions
    implementation "androidx.camera:camera-camera2:$camerax_version"

// CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"

// CameraX View class
    implementation "androidx.camera:camera-view:$camerax_version"

    implementation "androidx.camera:camera-video:$camerax_version"
//    implementation 'androidx.camera:camera-video:1.1.0-beta02'

}

android.applicationVariants.all { variant ->
    variant.outputs.all {
        outputFileName = "mydemo-${variant.versionName}.apk"
    }
}